# Build settings

# build output
outputDir: dist

# working directory
wsDir:
  static: static
  html: html
  css: css
  yaml2json: yaml2json
  img: img
  js: js

# directory configuration
# array is hierarchy
deployDir:
  json: [common, data]
  img: [common, img]
  css: [common, css]
  js: [common, js]

# build option
options:
  html:
    minify: false

  pug:
    # php file output
    php: false

    # lint configuration file
    lint: '.pug-lintrc.json'

    # lint configuration file for using by vue
    vuePugLint: 'config-vue/.pug-lintrc.json'

  css:
    minify: false
    postcss:
      # using node-css-mqpacker for postcss
      mqpacker: true

  js:
    minify: true

    # If minify is true to enabled
    terser:
      parallel: true
      extractComments: false
      terserOptions:
        compress:
          drop_console: true

    # tsconfig.json which is specified at the time of webpack build
    tsconfig: tsconfig.json

    # file names that combine the same logic
    splitFilename: assets

    sourceMap: true

    # The ESLint file to specify when building webpack
    eslint: '.eslintrc'

  json:
    minify: true

  # file-loader settings
  fileLoader:
    html:
      # false is not use a file-loader
      use: true

      # adding 6-digit hash for image path.
      hash: true

      target:
        - tag: img
          attribute: src
          type: src
        - tag: img
          attribute: srcset
          type: srcset
        - tag: img
          attribute: data-src
          type: src
        - tag: img
          attribute: data-srcset
          type: srcset
        - tag: source
          attribute: src
          type: src

    css:
      use: true
      hash: true

    js:
      use: true
      hash: true

    vue:
      use: true
      # vue-loader transformAssetUrls
      loader:
        video: [src, poster]
        source: src
        img: src

  webp:
    - target: [src, img]
      ext:
        png: true
        jpg: true
        gif: true
      options:
        quality: 70
      gifOptions:
        lossy: true
      deleteBefore: true
    - target: [src, static]
      ext:
        png: true
        jpg: true
        gif: true
      output: [dist, common, img]
      deleteBefore: false
