/*!
Create a Service Worker

https://github.com/io-arc/io-arc/tasks/task-service-worker
Version: 0.0.0
License: ISC
Copyright (c) 2020 arc one
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("commander"),require("fs"),require("@io-arc/env"),require("rxjs"),require("rxjs/operators"),require("kleur"),require("@io-arc/logger")):"function"==typeof define&&define.amd?define(["commander","fs","@io-arc/env","rxjs","rxjs/operators","kleur","@io-arc/logger"],t):t((e=e||self).commander,e.fs,e.env,e.rxjs,e.operators,e.kleur,e.Logger)}(this,(function(e,t,r,n,i,o,s){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s;var a,c,l,u,p,f=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)},m=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r};a=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,p=new WeakMap,e.program.version("0.0.0").option("-t, --template","generate template").parse(process.argv),e.program.template&&process.exit(1),(new class{constructor(){a.set(this,void 0),c.set(this,`${r.WS_ROOT_ABSOLUTE}/sw.js`),l.set(this,e=>{const{generateSW:t}=require("workbox-build");t(e).then(e=>{s.complete("service-worker"),s.message(`pre cache ${e.count} files, total ${f(this,p).call(this,e.size)}`)}).catch(e=>{s.failed("service-worker",e)})}),u.set(this,e=>{const t=1024,r=t**3,n=t**4;return e>=n?{denominator:n,unit:"TB"}:e>=r?{denominator:r,unit:"GB"}:e>=1048576?{denominator:1048576,unit:"MB"}:e>=t?{denominator:t,unit:"KB"}:{denominator:-1,unit:"byte"}}),p.set(this,e=>{const{denominator:t,unit:r}=f(this,u).call(this,e);return(t>-1?Math.floor(e/t*100)/100:e)+r});try{t.statSync(f(this,c)),m(this,a,!0)}catch(e){m(this,a,!1)}}exist(){return f(this,a)}run(){const e=require(f(this,c));n.of(e).pipe(i.map(e=>{if(null!=e.filename&&""!==e.filename||(e.filename="sw.js"),!/\.js$/.test(e.filename))throw new Error("Target filename wasn't JavaScrip file");return e}),i.map(e=>(e.manifest.globDirectory=r.DIST,e.manifest.swDest=`${r.DIST}/${e.filename}`,e.manifest))).subscribe(e=>{f(this,l).call(this,e)},e=>{s.message(e,o.red),process.exit(1)})}}).run()}));
