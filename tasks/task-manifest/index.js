/*!
Create a manifest.json

https://github.com/io-arc/io-arc/tasks/task-manifest
Version: 0.0.0
License: ISC
Copyright (c) 2020 arc one
*/
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(require("glob"),require("@io-arc/env"),require("rxjs"),require("rxjs/operators"),require("path"),require("js-yaml"),require("fs"),require("@io-arc/path-build"),require("make-dir"),require("@io-arc/logger"),require("kleur"),require("@io-arc/yaml2json"),require("node-watch")):"function"==typeof define&&define.amd?define(["glob","@io-arc/env","rxjs","rxjs/operators","path","js-yaml","fs","@io-arc/path-build","make-dir","@io-arc/logger","kleur","@io-arc/yaml2json","node-watch"],r):r((e=e||self).glob,e.env,e.rxjs,e.operators,e.path,e.yaml,e.fs,e.PathBuild,e.mkdir,e.Logger,e.kleur,e.Yaml2Json,e.watch)}(this,(function(e,r,t,a,o,s,n,l,i,c,p,u,f){"use strict";e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,o=o&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o,s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s,n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n,l=l&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l,i=i&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i,c=c&&Object.prototype.hasOwnProperty.call(c,"default")?c.default:c,u=u&&Object.prototype.hasOwnProperty.call(u,"default")?u.default:u,f=f&&Object.prototype.hasOwnProperty.call(f,"default")?f.default:f;const m=e=>{const c=new RegExp(".ya?ml$");return t.from(e).pipe(a.map(e=>{const t=o.basename(e).replace(c,".json"),a=s.safeLoad(n.readFileSync(e,"utf8"))||{};return{name:l.relative([r.DIST,t]),base:a}}),a.map(e=>{const{name:t,base:a}=e;return"name"in a&&""!==a.name||(a.name=r.SITE_TITLE),"short_name"in a&&""!==a.short_name||(a.short_name=r.SITE_TITLE),"scope"in a&&""!==a.scope||(a.scope=r.SITE_ROOT),"related_applications"in a&&"object"==typeof a.related_applications||(a.related_applications=[]),{name:t,body:JSON.stringify(a,null,2)}}),a.flatMap(async e=>(await i(o.dirname(e.name)),e)),a.map(e=>{try{return n.writeFileSync(e.name,e.body),e.name}catch(e){throw new Error(e)}}))},d=e=>c.message(`convert to ${e}`,p.green),y=e=>c.failed("manifest",e),b=e.sync(`${r.WS_ROOT}/manifest*.y?(a)ml`);if(r.MODE_ENV===r.MODE.WATCH){const e=new u([r.WS_ROOT],[r.DIST]);e.removeAll(`${r.DIST}/manifest*.json`).subscribe({error(e){y(e)},complete(){c.message("remove for exist manifest*.json files"),m(b).subscribe(d,y,()=>{f(r.WS_ROOT,{recursive:!0,filter:e=>/^(?!_)manifest.*\.ya?ml$/.test(o.basename(e))},(r,t)=>{switch(r){case"update":return void m([t]).subscribe(d,y);case"remove":return void e.remove(t).subscribe(e=>c.message(`remove for ${e}`,p.red));default:return}})})}})}else b.length>0&&m(b).subscribe(d,y,()=>c.complete("manifest"))}));
